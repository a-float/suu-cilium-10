1. Utworzyć dwa klastry EKS i w SG (security group) dodać inbound rule pozwalający na dostęp z dowolnego adresu i protokołu (tak jest najszybciej)
2. Dla każdego z nich:
 - aws eks --region us-east-1 update-kubeconfig --name <eks-nazwa>
 - kubectl config rename-context <nazwa-kontekstu> {aws-cilium-1,aws-cilium-2} (<nazwa-kontekstu> do uzyskania z kubectl config get-context)
 - kubectl -n kube-system delete daemonset aws-node
 - dodać node'y
3. Instalacja Cilium na pierwszym klastrze:
 - cilium install --context aws-cilium-1 --cluster-name aws-cilium-1 --cluster-id 1
4. Instalacja Cilium na drugim klastrze:
 - cilium install --context aws-cilium-2 --inherit-ca aws-cilium-1 --cluster-name aws-cilium-2 --cluster-id 2
5. Można poczekać, aż wszystko wstanie:
 - cilium status --context {aws-cilium-1,aws-cilium-2}
6. Uruchomienie ClusterMesh (każdy z klastrów):
 - cilium clustermesh enable --context {aws-cilium-1,aws-cilium-2} --service-type LoadBalancer
7. Połączenie klastrów (wystarczy na jednym z nich):
 - cilium clustermesh connect --context aws-cilium-1 --destination-context aws-cilium-2
8. Można poczekać, aż wszystko wstanie:
 - cilium clustermesh status --context {aws-cilium-1,aws-cilium-2}
9. DEMO (klaster 1):
 - kubectl apply -f zookeeper.yaml
 - kubectl wait --for=condition=ready pod -l app=zookeeper
 - kubectl apply -f kafka.yaml
 - kubectl apply -f kafka-service.yaml
 - kubectl wait --for=condition=ready pod -l app=kafka
 - kubectl apply -f ./workers/deployment-mul.yaml
 - kubectl apply -f ./workers/deployment-div.yaml
 - kubectl apply -f ./workers/services.yaml
 - kubectl apply -f job-submitter/deployment.yaml
 - kubectl apply -f job-submitter/service.yaml
 - kubectl apply -f result-aggregator/deployment.yaml
 - kubectl apply -f result-aggregator/service.yaml
10. DEMO (klaster 2):
 - kubectl apply -f kafka-service.yaml
 - kubectl apply -f ./result-aggreagtor/service.yaml
 - kubectl apply -f ./workers/deployment-add.yaml
 - kubectl apply -f ./workers/deployment-sub.yaml
 - kubectl apply -f ./workers/services.yaml
11. DEMO - policy:
 - kubectl apply -f ./policies/secure-kafka.yaml
 - kubectl apply -f ./policies/workers-disable-http-access.yaml


Hubble:
1. Na każdym z klastrów:
 - cilium hubble enable --ui --context {aws-cilium-1,aws-cilium-2}
2. Uruchomienie UI:
 - cilium hubble ui

